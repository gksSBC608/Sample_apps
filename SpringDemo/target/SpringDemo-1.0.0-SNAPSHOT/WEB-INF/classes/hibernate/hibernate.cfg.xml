<?xml version='1.0' encoding='UTF-8'?>  
<!DOCTYPE hibernate-configuration PUBLIC  
          "-//Hibernate/Hibernate Configuration DTD 3.0//EN"  
          "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">

<!-- The DTD above is very important. Use this file for your reference or 
	take it up from the internet. If the DTD has a mistake, the XML will almost 
	never work -->

<!-- The configuration for the hibernate framework is put in the ".cfg.xml" 
	file. This file is provided to the org.hibernate.cfg.Configuration class 
	at runtime to establish a connection with the underlying database and set 
	other properties of hibernate -->
<hibernate-configuration>

	<!-- Hibernate creates a session factory out of the configurations provided -->
	<session-factory>

		<!-- Database connection properties - MySQL -->

		<!-- hibernate.hbm2ddl.auto - create | means create the schema everytime 
			the application starts, the other main and mostly used value for this property 
			is 'update', which doesn't drop and recreate the schema everytime the application 
			is run -->
		<!-- Activity : change the value to 'update' and play with the application -->
		<property name="hibernate.hbm2ddl.auto">update</property>

		<!-- hibernate.dialect | tells hibernate which SQL syntax to use when performing 
			transactions with the database -->
		<property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>

		<!-- The URL of database server -->
		<!-- Note : The database that hibernate tries to get a connection to SHOULD 
			be existing before establishing the connection, hibernate will only create 
			the tables in the database but not the database itself -->
		<property name="connection.url">jdbc:mysql://localhost:3306/office</property>

		<!-- Database username -->
		<property name="connection.username">root</property>

		<!-- Database password -->
		<property name="connection.password">Sunshine123</property>

		<!-- Database driver class -->
		<property name="connection.driver_class">com.mysql.jdbc.Driver</property>

		<!-- show_sql | will print the hibernate generated sql statements onto 
			the console, very useful for debugging purposes but DO NOT keep it to true 
			while deploying in the production servers. As the logs generated by this 
			property are very very very verbose -->
		<property name="show_sql">true</property>

		<!-- format_sql | prints the hibernate generated sql statements in a neatly 
			formatted manner -->
		<property name="format_sql">true</property>

		<!-- use_sql_comments | will use sql comments along with the sql statements 
			generated. Useful for debugging purposes. -->
		<property name="use_sql_comments">true</property>

		<!-- The annotated classes need to be specified for hibernate -->
		<mapping class="com.mindtree.entities.Employee" />
		<mapping class="com.mindtree.entities.Department" />
		<mapping class="com.mindtree.entities.Address" />

	</session-factory>

</hibernate-configuration>